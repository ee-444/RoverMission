###############################################################################
# Makefile for the project RoverMission
###############################################################################

## General Flags
PROJECT = RoverMission
MCU = atmega328p
TARGET = RoverMission.elf
CC = avr-gcc

CPP = avr-g++

## Options common to compile, link and assembly rules
COMMON = -mmcu=$(MCU)

## Compile options common for all C compilation units.
CFLAGS = $(COMMON)
CFLAGS += -Wall -gdwarf-2   -std=c99      -ffunction-sections   -Wl,--gc-sections    -fno-threadsafe-statics                        -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums
CFLAGS += -MD -MP -MT $(*F).o -MF dep/$(@F).d 

## Assembly specific flags
ASMFLAGS = $(COMMON)
ASMFLAGS += $(CFLAGS)
ASMFLAGS += -x assembler-with-cpp -Wa,-gdwarf2

## Linker flags
LDFLAGS = $(COMMON)
LDFLAGS += -Wl--gcc-sections -Wl,-Map=RoverMission.map


## Intel Hex file production flags
HEX_FLASH_FLAGS = -R .eeprom -R .fuse -R .lock -R .signature

HEX_EEPROM_FLAGS = -j .eeprom
HEX_EEPROM_FLAGS += --set-section-flags=.eeprom="alloc,load"
HEX_EEPROM_FLAGS += --change-section-lma .eeprom=0 --no-change-warnings


## Include Directories
INCLUDES = -I"B:\atmel_projects\RoverMission\source" -I"B:\atmel_projects\RoverMission\library\arduino" -I"B:\atmel_projects\RoverMission\library" -I"B:\atmel_projects\RoverMission\library\AFMotor" -I"B:\atmel_projects\RoverMission\library\EEPROM" -I"B:\atmel_projects\RoverMission\library\Wire" 

## Library Directories
LIBDIRS = -L"B:\atmel_projects\RoverMission\library" 

## Libraries
LIBS = -lroverarduino 

## Objects that must be built in order to link
OBJECTS = main.o compass.o missiontasks.o pid.o MissionConsole.o 

## Objects explicitly added by the user
LINKONLYOBJECTS = 

## Build
all: $(TARGET) RoverMission.hex RoverMission.eep RoverMission.lss size

## Compile
main.o: ../source/main.cpp
	$(CPP) $(INCLUDES) $(CFLAGS) -c  $<

compass.o: ../source/compass.cpp
	$(CPP) $(INCLUDES) $(CFLAGS) -c  $<

missiontasks.o: ../source/missiontasks.cpp
	$(CPP) $(INCLUDES) $(CFLAGS) -c  $<

pid.o: ../source/pid.cpp
	$(CPP) $(INCLUDES) $(CFLAGS) -c  $<

MissionConsole.o: ../source/MissionConsole.cpp
	$(CPP) $(INCLUDES) $(CFLAGS) -c  $<

##Link
$(TARGET): $(OBJECTS)
	 $(CPP) $(LDFLAGS) $(OBJECTS) $(LINKONLYOBJECTS) $(LIBDIRS) $(LIBS) -o $(TARGET)

%.hex: $(TARGET)
	avr-objcopy -O ihex $(HEX_FLASH_FLAGS)  $< $@

%.eep: $(TARGET)
	-avr-objcopy $(HEX_EEPROM_FLAGS) -O ihex $< $@ || exit 0

%.lss: $(TARGET)
	avr-objdump -h -S $< > $@

size: ${TARGET}
	@echo
	@avr-size -C --mcu=${MCU} ${TARGET}

## Clean target
.PHONY: clean
clean:
	-rm -rf $(OBJECTS) RoverMission.elf dep/* RoverMission.hex RoverMission.eep RoverMission.lss RoverMission.map


## Other dependencies
-include $(shell mkdir dep 2>NUL) $(wildcard dep/*)

